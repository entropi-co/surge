// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: tokens.sql

package schema

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const createRefreshToken = `-- name: CreateRefreshToken :one
insert into auth.refresh_tokens(user_id, token, revoked, created_at, updated_at)
values ($1, $2, $3, now(), now())
returning id, user_id, token, revoked, created_at, updated_at
`

type CreateRefreshTokenParams struct {
	UserID  uuid.NullUUID
	Token   sql.NullString
	Revoked bool
}

func (q *Queries) CreateRefreshToken(ctx context.Context, arg CreateRefreshTokenParams) (*AuthRefreshToken, error) {
	row := q.db.QueryRowContext(ctx, createRefreshToken, arg.UserID, arg.Token, arg.Revoked)
	var i AuthRefreshToken
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.Token,
		&i.Revoked,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return &i, err
}
